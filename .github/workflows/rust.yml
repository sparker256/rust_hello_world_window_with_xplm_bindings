name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  RUST_HELLO_WORLD_VERSION: 1.0.0
  CARGO_TERM_COLOR: always

jobs:
  build-lin:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libxcb-shape0-dev libxcb-xfixes0-dev libclang-dev
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Compile RUST_HELLO_WORLD_WINDOW
        run: |
          cargo build --release
          cp target/release/librust_hello_world_window.so lin.xpl
          ldd lin.xpl
      - name: RUST_HELLO_WORLD_WINDOW Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rust_hello_world_window
          path: lin.xpl
          
  build-mac:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Add Apple Silicon
        run: |
          rustup target add aarch64-apple-darwin
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Compile RUST_HELLO_WORLD_WINDOW
        run: |
          cargo build --release --target x86_64-apple-darwin
          cargo build --release --target aarch64-apple-darwin
          lipo -create target/x86_64-apple-darwin/release/librust_hello_world_window.dylib target/aarch64-apple-darwin/release/librust_hello_world_window.dylib -o mac.xpl
          otool -L mac.xpl
      - name: RUST_HELLO_WORLD_WINDOW Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rust_hello_world_window
          path: mac.xpl
          
  build-win:
    runs-on: windows-latest
    steps:
      - name: Install LLVM and Clang # required for bindgen to work, see https://github.com/rust-lang/rust-bindgen/issues/1797
        uses: KyleMayes/install-llvm-action@32c4866ebb71e0949e8833eb49beeebed48532bd
        if: matrix.config.os == 'windows-latest'
        with:
          version: "11.0"
          directory: ${{ runner.temp }}/llvm
      - name: Set LIBCLANG_PATH
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
        if: matrix.config.os == 'windows-latest'
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Compile RUST_HELLO_WORLD_WINDOW
        run: |
          cargo build --release
          cp target/release/rust_hello_world_window.dll win.xpl
      - name: RUST_HELLO_WORLD_WINDOW Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rust_hello_world_window
          path: win.xpl
          
  package:
    runs-on: ubuntu-20.04
    needs: [build-lin, build-mac, build-win]
    steps:
      - uses: actions/checkout@v3
  
      - name: Copy files
        run: |
          mkdir -p rust_hello_world_window/lin_x64
          mkdir -p rust_hello_world_window/mac_x64
          mkdir -p rust_hello_world_window/win_x64
          
      - uses: actions/download-artifact@v3
        with:
          name: rust_hello_world_window
          path: rust_hello_world_window/lin_x64
       
       -name: Rename lin.xpl to FlyWithLua.xpl
       run: |
         mv rust_hello_world_window/lin_x64/lin.xpl rust_hello_world_window/lin_x64/rust_hello_world_window.xpl
         
       -name: Rename mac.xpl to FlyWithLua.xpl
       run: |
         mv rust_hello_world_window/lin_x64/mac.xpl rust_hello_world_window/mac_x64/rust_hello_world_window.xpl
         
       -name: Rename win.xpl to FlyWithLua.xpl
       run: |
         mv rust_hello_world_window/lin_x64/mac.xpl rust_hello_world_window/win_x64/rust_hello_world_window.xpl
         
       - uses: actions/upload-artifact@v3
         with:
           name: rust_hello_world_window
           path: |
             ${{github.workspace}}/rust_hello_world_window*
           if-no-files-found: error   
         
                    
          
          
                               
